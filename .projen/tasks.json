{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build for all affected projects",
      "steps": [
        {
          "exec": "tsc -b tsconfig.build.json"
        },
        {
          "exec": "pnpm --recursive --parallel run build",
          "receiveArgs": true
        }
      ]
    },
    "bump": {
      "name": "bump",
      "description": "Bump package versions with changesets",
      "steps": [
        {
          "exec": "changeset version"
        },
        {
          "spawn": "install"
        }
      ]
    },
    "changeset": {
      "name": "changeset",
      "steps": [
        {
          "exec": "changeset",
          "receiveArgs": true
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile for all affected projects",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run compile",
          "receiveArgs": true
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "tsx .projenrc.ts"
        }
      ]
    },
    "docgen": {
      "name": "docgen",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run docgen"
        },
        {
          "exec": "node scripts/docs.mjs"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint .",
          "receiveArgs": true
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package for all affected projects",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run package",
          "receiveArgs": true
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation for all affected projects",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run post-compile",
          "receiveArgs": true
        }
      ]
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation for all affected projects",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run pre-compile",
          "receiveArgs": true
        }
      ]
    },
    "preinstall": {
      "name": "preinstall",
      "description": "asserts the correct package manager is used",
      "steps": [
        {
          "exec": "npx only-allow pnpm"
        }
      ]
    },
    "release": {
      "name": "release",
      "description": "Release with changesets",
      "steps": [
        {
          "exec": "changeset publish"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests for all affected projects",
      "steps": [
        {
          "exec": "vitest --globals",
          "receiveArgs": true
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background for all affected projects",
      "steps": [
        {
          "exec": "pnpm --recursive --parallel run watch",
          "receiveArgs": true
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run \"pnpm exec projen\"."
}
